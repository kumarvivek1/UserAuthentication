[{"D:\\code\\userauthentication\\userauthentication\\src\\index.js":"1","D:\\code\\userauthentication\\userauthentication\\src\\App.js":"2","D:\\code\\userauthentication\\userauthentication\\src\\reportWebVitals.js":"3","D:\\code\\userauthentication\\userauthentication\\src\\components\\Register.js":"4","D:\\code\\userauthentication\\userauthentication\\src\\components\\Login.js":"5","D:\\code\\userauthentication\\userauthentication\\src\\components\\Nav.js":"6","D:\\code\\userauthentication\\userauthentication\\src\\components\\Home.js":"7","D:\\code\\userauthentication\\userauthentication\\src\\components\\Account.js":"8","D:\\code\\userauthentication\\userauthentication\\src\\components\\carousel.js":"9","D:\\code\\userauthentication\\userauthentication\\src\\components\\MyNotes.js":"10"},{"size":266,"mtime":1609230610755,"results":"11","hashOfConfig":"12"},{"size":572,"mtime":1609936804750,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":4357,"mtime":1609936631822,"results":"15","hashOfConfig":"12"},{"size":3458,"mtime":1610002551304,"results":"16","hashOfConfig":"12"},{"size":2613,"mtime":1610003173837,"results":"17","hashOfConfig":"12"},{"size":1262,"mtime":1609575845702,"results":"18","hashOfConfig":"12"},{"size":1316,"mtime":1609478149768,"results":"19","hashOfConfig":"12"},{"size":1781,"mtime":1609576155078,"results":"20","hashOfConfig":"12"},{"size":4422,"mtime":1610000056017,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"vces6q",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},"D:\\code\\userauthentication\\userauthentication\\src\\index.js",[],["49","50"],"D:\\code\\userauthentication\\userauthentication\\src\\App.js",["51"],"import React,{useState,useEffect} from 'react'\nimport './style/App.css';\nimport Nav from './components/Nav'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n  const handleLogin = (val) => {\n      setIsLoggedIn(!isLoggedIn)\n  }\n  useEffect(() => {\n        const result = localStorage.getItem(\"loginToken\")\n        if(result)\n          handleLogin()\n    },[])\n  \n  return (\n    <div className=\"App\">\n      <Nav isLoggedIn={isLoggedIn} handleLogin={handleLogin}/>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\code\\userauthentication\\userauthentication\\src\\reportWebVitals.js",[],"D:\\code\\userauthentication\\userauthentication\\src\\components\\Register.js",["52","53","54","55"],"import React, {useState,useEffect } from 'react'\r\nimport '../style/register.css'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport swal from 'sweetalert'\r\n\r\nconst Register = (props) => {\r\n    const {handleMessage}=props\r\n    const [formData, setFormData] = useState({ username: '', email: '', password: '' })\r\n    const [error, setError] = useState({})\r\n    const [toggle, setToggle] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        if (JSON.parse(localStorage.getItem(\"loginToken\"))) {\r\n             localStorage.removeItem(\"loginToken\")\r\n        }  \r\n     }, [])\r\n    \r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n    const handleRemove = () => {\r\n        setFormData({ username: '', email: '', password: '' })\r\n        setError({})\r\n    }\r\n\r\n    const handleSubmit =(e) => {\r\n        e.preventDefault()\r\n        const errorData = {}\r\n        if (formData.username.length === 0) {\r\n            errorData.username=\"username can't be blank\"\r\n        }\r\n\r\n        if (formData.email.length === 0) {\r\n            errorData.email=\"email can't be blank\"\r\n        } else if (!validateEmail(formData.email)) {\r\n            errorData.email=\"enter valid email\"\r\n        }\r\n\r\n        if (formData.password.length === 0) {\r\n            errorData.password=\"password can't be blank\"\r\n        } else if (formData.password.length > 0 && (formData.password.length < 8 || formData.password.length > 128)) {\r\n            errorData.password=\"password length must be between 8 to 128 character\"\r\n        }\r\n        setError(errorData)\r\n\r\n        if (Object.keys(errorData).length === 0) {\r\n            const url = \"http://dct-user-auth.herokuapp.com/users/register\"\r\n            \r\n            axios.post(url, formData)\r\n                .then((res) => {\r\n                    if (!res.data.hasOwnProperty(\"errors\")) {\r\n                        handleMessage(\"You have registered sucessfully!\");\r\n                        setFormData({ username: '', email: '', password: '' })\r\n                        setToggle(true)\r\n                    } else {\r\n                        setError({errors:\"userName or email already exists\"})\r\n                    } \r\n                })\r\n                .catch((err) => {\r\n                    swal(err.message)\r\n                })\r\n        }\r\n    }\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    }\r\n\r\n    return (\r\n        <div className=\"register\">\r\n            <div className=\"regform\">\r\n                {error.errors && <span>{error.errors}</span>\r\n                }\r\n                <h3>Register here!</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={formData.username} onChange={handleChange} placeholder=\"UserName\" name=\"username\" /><br />\r\n                    {\r\n                        error.username && <div><span>{error.username}</span><br/></div>\r\n                    }\r\n                    <input type=\"text\" value={formData.email} onChange={handleChange} placeholder=\"Email\" name=\"email\" /><br />\r\n                    {\r\n                        error.email && <div><span>{error.email}</span><br/></div>\r\n                    }\r\n                    <input type=\"password\" value={formData.password} onChange={handleChange} placeholder=\"Password\" name=\"password\" /><br />\r\n                    {\r\n                        error.password && <div><span>{error.password}</span><br /></div>\r\n                    }\r\n                    {/*(formData.username.length===0 ||formData.email.length===0 || formData.password.length===0 || Object.keys(error).length!==0) ?(<input type=\"submit\" value=\"Register\" disabled/>):(<input type=\"submit\" value=\"Register\"/>)\r\n                    */}\r\n                    <input type=\"submit\" value=\"Register\"/>\r\n                    <input type=\"button\" value=\"cancel\" onClick={handleRemove}/>\r\n                </form>\r\n                <p>Already have account? <Link to='/login'>Login</Link></p>\r\n            </div>\r\n            {\r\n                toggle && <Redirect to=\"/login\"/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Register","D:\\code\\userauthentication\\userauthentication\\src\\components\\Login.js",["56"],"import React, { useEffect, useState } from 'react'\r\nimport '../style/login.css'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport swal from 'sweetalert'\r\n\r\nconst Login = (props) => {\r\n    const {handleLogin,message,handleMessage}=props\r\n    const [loginData, setLoginData] = useState({ email: '', password: '' })\r\n    const [error, setError] = useState({})\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (JSON.parse(localStorage.getItem(\"loginToken\"))) {\r\n            localStorage.removeItem(\"loginToken\")\r\n            handleMessage(\"successfully logged out\")\r\n        }  \r\n     }, [])\r\n    \r\n    const handleChange = (e) => {\r\n        setLoginData({...loginData,[e.target.name]:e.target.value})\r\n    }\r\n    const handleRemove = () => {\r\n        setLoginData({ email: '', password: '' })\r\n        setError({})\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const errData = {}\r\n\r\n        if (loginData.email.length === 0) {\r\n            errData.email=\"email can't be blank\"\r\n        }\r\n        if (loginData.password.length === 0) {\r\n            errData.password=\"password can't be blank\"\r\n        } else if (loginData.password.length > 0 && (loginData.password.length < 8 || loginData.password.length > 128)) {\r\n            errData.password=\"password length must be between 8 to 128 character\"\r\n        }\r\n        setError(errData)\r\n        if (Object.keys(errData).length === 0) {\r\n            const url = \"http://dct-user-auth.herokuapp.com/users/login\"\r\n            axios.post(url, loginData)\r\n                .then((res) => {\r\n                    if (res.data.hasOwnProperty(\"errors\")) {\r\n                        setError({ status: res.data })\r\n                    } else if (res.data.hasOwnProperty(\"token\")) {\r\n                        localStorage.setItem(\"loginToken\", JSON.stringify(res.data))\r\n                        handleLogin()\r\n                        handleMessage(\"You have logged in successfully!\")\r\n                        history.push(\"/\")\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    swal(err.message)\r\n                })\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"login\">\r\n            {\r\n                message && <h4 id='message'>{message}</h4>\r\n            }\r\n            <div className=\"loginform\">\r\n                {\r\n                    error.status && <span>{error.status.errors}</span>\r\n                }\r\n                <h3>Login to your account!</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={loginData.email} onChange={handleChange} placeholder=\"email\" name=\"email\" /><br />\r\n                     {\r\n                        error.email && <div><span>{error.email}</span><br /></div>\r\n                    }\r\n                    <input type=\"password\" value={loginData.password} onChange={handleChange} placeholder=\"Password\" name=\"password\" /><br />\r\n                     {\r\n                        error.password && <div><span>{error.password}</span><br /></div>\r\n                    }\r\n                    <input type=\"submit\" value=\"Login\" />\r\n                    <input type=\"button\" value=\"cancel\" onClick={handleRemove}/>\r\n                </form>\r\n                <p>Don't have Account ? <Link to='/register'>Register here</Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Login","D:\\code\\userauthentication\\userauthentication\\src\\components\\Nav.js",[],"D:\\code\\userauthentication\\userauthentication\\src\\components\\Home.js",[],"D:\\code\\userauthentication\\userauthentication\\src\\components\\Account.js",["57"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport '../style/account.css'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Account = (props) => {\r\n    const {handleMessage} = props\r\n    const [userData, setUserData] = useState({})\r\n    const history = useHistory()\r\n    \r\n    useEffect(() => {\r\n        const tokenValue = JSON.parse(localStorage.getItem(\"loginToken\"))\r\n        if (tokenValue) {\r\n            const url = \"http://dct-user-auth.herokuapp.com/users/account\"\r\n        axios.get(url, { headers: { 'x-auth': tokenValue.token } })\r\n            .then((res) => {\r\n                setUserData(res.data)\r\n            })\r\n            .catch((err) => {\r\n                history.push(\"/login\")\r\n                handleMessage(\"you need to login first. Please login here!\")\r\n            })\r\n        } else {\r\n            history.push(\"/login\")\r\n            handleMessage(\"you need to login first. Please login here!\")\r\n        }\r\n        \r\n    }, [])\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"showUser\">\r\n                <h4>{userData.username}</h4>\r\n                <h4>{userData.email}</h4>\r\n                <h4>{userData.createdAt}</h4>\r\n                <h4>{userData._id}</h4>\r\n            </div>\r\n        </div>\r\n     )\r\n}\r\nexport default Account","D:\\code\\userauthentication\\userauthentication\\src\\components\\carousel.js",[],["58","59"],"D:\\code\\userauthentication\\userauthentication\\src\\components\\MyNotes.js",["60"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport '../style/mynote.css'\r\nimport { Link } from 'react-router-dom'\r\nimport swal from \"sweetalert\"\r\n\r\nconst MyNotes = (props) => {\r\n    const [token,setToken]=useState('')\r\n    const [title, setTitle] = useState('')\r\n    const [body, setBody] = useState('')\r\n    const [notes, setNotes] = useState([])\r\n    const [error,setError]=useState({})\r\n\r\n    const errorData={}\r\n\r\n    useEffect(() => {\r\n        const tokenValue = JSON.parse(localStorage.getItem(\"loginToken\"))\r\n        setToken(tokenValue.token)\r\n        const url = \"http://dct-user-auth.herokuapp.com/api/notes\"\r\n        axios.get(url, { headers: { \"x-auth\": tokenValue.token } })\r\n            .then((res) => {\r\n                setNotes(res.data.reverse())\r\n            })\r\n            .catch((err) => {\r\n                swal(err.message)\r\n            })\r\n    }, [])\r\n    \r\n    const handleTitle = (e) => {\r\n        setTitle(e.target.value)\r\n    }\r\n    const handleBody = (e) => {\r\n        setBody(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setError({})\r\n         if (title.length === 0) {\r\n            errorData.title=\"title can't be blank\"\r\n        }\r\n        if (body.length === 0) {\r\n            errorData.body=\"body can't be blank\"\r\n        }\r\n        setError(errorData)\r\n        if (Object.keys(errorData).length===0) {\r\n            const formData = {\r\n            title: title,\r\n            body:body\r\n        }\r\n        addNote(formData)\r\n        setTitle('')\r\n        setBody('')\r\n        }\r\n        \r\n    }\r\n    const addNote = (formData) => {\r\n        if (token) {\r\n            const url = \"http://dct-user-auth.herokuapp.com/api/notes\"\r\n            axios.post(url, formData,{headers:{'x-auth':token}})\r\n            .then((res) => {\r\n                setNotes([res.data,...notes])\r\n            })\r\n                .catch((err) => {\r\n                    swal(err.message)\r\n                })\r\n        } else {\r\n            props.history.push('/')\r\n        }    \r\n    }\r\n    const showDetail = (id) => {\r\n        const url = `http://dct-user-auth.herokuapp.com/api/notes/${id}`\r\n        axios.get(url, { headers: { \"x-auth\": token } })\r\n            .then((res) => {\r\n                const result=res.data\r\n                swal(`${result.title}`, `note : ${result.body}`);\r\n            })\r\n            .catch((err) => {\r\n                swal(err.message)\r\n            })\r\n    }\r\n    const handleRemove = (id) => {\r\n        const url = `http://dct-user-auth.herokuapp.com/api/notes/${id}`\r\n        axios.delete(url, { headers: { \"x-auth\": token } })\r\n            .then((res) => {\r\n                    const result = notes.filter(note => {\r\n                        return id !== note._id\r\n                    })\r\n                    setNotes(result)\r\n            })\r\n            .catch((err) => {\r\n                swal(err.message)\r\n            })\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"mynotes\">\r\n            <div className=\"notelist\">\r\n                <h3>My Notes</h3>\r\n                {\r\n                    notes.map(note => {\r\n                        if (note.hasOwnProperty(\"_id\")) {\r\n                            return (\r\n                                <div key={note._id}>\r\n                                    <p><Link to=\"#\" onClick={() => showDetail(note._id)}>{note.title}</Link> {'       '}\r\n                                    <button id=\"button\" onClick={() => handleRemove(note._id)}>delete</button></p>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"noteform\">\r\n                <h3>Add Note</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" placeholder=\"title\" value={title} onChange={handleTitle} /><br />\r\n                    {error.title && <div><span>{error.title}</span><br/></div>\r\n                    }\r\n                    <textarea placeholder=\"add some notes here...\" value={body} onChange={handleBody} /><br />\r\n                    {\r\n                        error.body && <div><span>{error.body}</span><br/></div>\r\n                    }\r\n                    <input type=\"submit\" value=\"Add\"/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MyNotes",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":17,"column":7,"nodeType":"67","endLine":17,"endColumn":9,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":66,"column":42,"nodeType":"71","messageId":"72","endLine":66,"endColumn":43,"suggestions":"73"},{"ruleId":"69","severity":1,"message":"70","line":66,"column":67,"nodeType":"71","messageId":"72","endLine":66,"endColumn":68,"suggestions":"74"},{"ruleId":"69","severity":1,"message":"70","line":66,"column":76,"nodeType":"71","messageId":"72","endLine":66,"endColumn":77,"suggestions":"75"},{"ruleId":"69","severity":1,"message":"70","line":66,"column":80,"nodeType":"71","messageId":"72","endLine":66,"endColumn":81,"suggestions":"76"},{"ruleId":"65","severity":1,"message":"77","line":18,"column":9,"nodeType":"67","endLine":18,"endColumn":11,"suggestions":"78"},{"ruleId":"65","severity":1,"message":"79","line":28,"column":8,"nodeType":"67","endLine":28,"endColumn":10,"suggestions":"80"},{"ruleId":"61","replacedBy":"81"},{"ruleId":"63","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":101,"column":36,"nodeType":"85","messageId":"86","endLine":101,"endColumn":38},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleLogin'. Either include it or remove the dependency array.","ArrayExpression",["89"],"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["90","91"],["92","93"],["94","95"],["96","97"],"React Hook useEffect has a missing dependency: 'handleMessage'. Either include it or remove the dependency array.",["98"],"React Hook useEffect has missing dependencies: 'handleMessage' and 'history'. Either include them or remove the dependency array.",["99"],["87"],["88"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"messageId":"102","fix":"103","desc":"104"},{"messageId":"105","fix":"106","desc":"107"},{"messageId":"102","fix":"108","desc":"104"},{"messageId":"105","fix":"109","desc":"107"},{"messageId":"102","fix":"110","desc":"104"},{"messageId":"105","fix":"111","desc":"107"},{"messageId":"102","fix":"112","desc":"104"},{"messageId":"105","fix":"113","desc":"107"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [handleLogin]",{"range":"118","text":"119"},"removeEscape",{"range":"120","text":"121"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"122","text":"123"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"124","text":"121"},{"range":"125","text":"123"},{"range":"126","text":"121"},{"range":"127","text":"123"},{"range":"128","text":"121"},{"range":"129","text":"123"},"Update the dependencies array to be: [handleMessage]",{"range":"130","text":"131"},"Update the dependencies array to be: [handleMessage, history]",{"range":"132","text":"133"},[426,428],"[handleLogin]",[2450,2451],"",[2450,2450],"\\",[2475,2476],[2475,2475],[2484,2485],[2484,2484],[2488,2489],[2488,2488],[642,644],"[handleMessage]",[990,992],"[handleMessage, history]"]