[{"D:\\code\\userauthentication\\userauthentication\\src\\index.js":"1","D:\\code\\userauthentication\\userauthentication\\src\\App.js":"2","D:\\code\\userauthentication\\userauthentication\\src\\reportWebVitals.js":"3","D:\\code\\userauthentication\\userauthentication\\src\\components\\Register.js":"4","D:\\code\\userauthentication\\userauthentication\\src\\components\\Login.js":"5","D:\\code\\userauthentication\\userauthentication\\src\\components\\Nav.js":"6","D:\\code\\userauthentication\\userauthentication\\src\\components\\Home.js":"7","D:\\code\\userauthentication\\userauthentication\\src\\components\\Account.js":"8"},{"size":266,"mtime":1609230610755,"results":"9","hashOfConfig":"10"},{"size":2086,"mtime":1609313295942,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":4490,"mtime":1609310909057,"results":"13","hashOfConfig":"10"},{"size":3332,"mtime":1609308872807,"results":"14","hashOfConfig":"10"},{"size":962,"mtime":1609257162218,"results":"15","hashOfConfig":"10"},{"size":1549,"mtime":1609313428454,"results":"16","hashOfConfig":"10"},{"size":1441,"mtime":1609309231451,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"vces6q",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"D:\\code\\userauthentication\\userauthentication\\src\\index.js",[],["38","39"],"D:\\code\\userauthentication\\userauthentication\\src\\App.js",["40"],"D:\\code\\userauthentication\\userauthentication\\src\\reportWebVitals.js",[],"D:\\code\\userauthentication\\userauthentication\\src\\components\\Register.js",["41","42","43","44","45","46"],"import React, {useState,useEffect } from 'react'\r\nimport Nav from './Nav'\r\nimport '../style/register.css'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport swal from 'sweetalert'\r\n\r\nconst Register = (props) => {\r\n    const {handleLogout}=props\r\n    const [formData, setFormData] = useState({ username: '', email: '', password: '' })\r\n    const [error, setError] = useState({})\r\n    const [toggle, setToggle] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        if (JSON.parse(localStorage.getItem(\"loginToken\"))) {\r\n             handleLogout()\r\n        }  \r\n     }, [])\r\n    \r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n    const handleRemove = () => {\r\n        setFormData({ username: '', email: '', password: '' })\r\n        setError({})\r\n    }\r\n\r\n    const handleSubmit =(e) => {\r\n        e.preventDefault()\r\n        const errorData = {}\r\n        if (formData.username.length === 0) {\r\n            errorData.username=\"username can't be blank\"\r\n        }\r\n\r\n        if (formData.email.length === 0) {\r\n            errorData.email=\"email can't be blank\"\r\n        } else if (!validateEmail(formData.email)) {\r\n            errorData.email=\"enter valid email\"\r\n        }\r\n\r\n        if (formData.password.length === 0) {\r\n            errorData.password=\"password can't be blank\"\r\n        } else if (formData.password.length > 0 && (formData.password.length < 8 || formData.password.length > 128)) {\r\n            errorData.password=\"password length must be between 8 to 128 character\"\r\n        }\r\n        setError(errorData)\r\n\r\n        if (Object.keys(errorData).length === 0) {\r\n            const url = \"http://dct-user-auth.herokuapp.com/users/register\"\r\n            \r\n            axios.post(url, formData)\r\n                .then((res) => {\r\n                    console.log(res.data)\r\n                    if (Object.keys(res.data)[0]!==\"errors\") {\r\n                        swal(\"success!\", \"You have registered sucessfully!\", \"success\");\r\n                        setFormData({ username: '', email: '', password: '' })\r\n                        setToggle(true)\r\n                    } else {\r\n                        setError({errors:\"userName or email already exists\"})\r\n                    } \r\n                })\r\n                .catch((err) => {\r\n                    swal(err.message)\r\n                })\r\n        }\r\n    }\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    }\r\n    const handleError = (name) => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"register\">\r\n            <Nav/>\r\n            <div className=\"regform\">\r\n                {error.errors && <span>{error.errors}</span>\r\n                }\r\n                <h3>Register here!</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={formData.username} onChange={handleChange} placeholder=\"UserName\" name=\"username\" /><br />\r\n                    {\r\n                        error.username && <div><span>{error.username}</span><br/></div>\r\n                    }\r\n                    <input type=\"text\" value={formData.email} onChange={handleChange} placeholder=\"Email\" name=\"email\" /><br />\r\n                    {\r\n                        error.email && <div><span>{error.email}</span><br/></div>\r\n                    }\r\n                    <input type=\"password\" value={formData.password} onChange={handleChange} placeholder=\"Password\" name=\"password\" /><br />\r\n                    {\r\n                        error.password && <div><span>{error.password}</span><br /></div>\r\n                    }\r\n                    {/*(formData.username.length===0 ||formData.email.length===0 || formData.password.length===0 || Object.keys(error).length!==0) ?(<input type=\"submit\" value=\"Register\" disabled/>):(<input type=\"submit\" value=\"Register\"/>)\r\n                    */}\r\n                    <input type=\"submit\" value=\"Register\"/>\r\n                    <input type=\"button\" value=\"cancel\" onClick={handleRemove}/>\r\n                </form>\r\n                <p>Already have account? <Link to='/login'>Login</Link></p>\r\n            </div>\r\n            {\r\n                toggle && <Redirect to=\"/login\"/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Register","D:\\code\\userauthentication\\userauthentication\\src\\components\\Login.js",["47"],"import React, { useEffect, useState } from 'react'\r\nimport Nav from './Nav'\r\nimport '../style/login.css'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport swal from 'sweetalert'\r\n\r\nconst Login = (props) => {\r\n    const {handleLogin,handleLogout}=props\r\n    const [loginData, setLoginData] = useState({ email: '', password: '' })\r\n    const [error, setError] = useState({})\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (JSON.parse(localStorage.getItem(\"loginToken\"))) {\r\n            handleLogout()\r\n        }  \r\n     }, [])\r\n    \r\n    const handleChange = (e) => {\r\n        setLoginData({...loginData,[e.target.name]:e.target.value})\r\n    }\r\n    const handleRemove = () => {\r\n        setLoginData({ email: '', password: '' })\r\n        setError({})\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const errData = {}\r\n\r\n        if (loginData.email.length === 0) {\r\n            errData.email=\"email can't be blank\"\r\n        }\r\n        if (loginData.password.length === 0) {\r\n            errData.password=\"password can't be blank\"\r\n        } else if (loginData.password.length > 0 && (loginData.password.length < 8 || loginData.password.length > 128)) {\r\n            errData.password=\"password length must be between 8 to 128 character\"\r\n        }\r\n        setError(errData)\r\n        if (Object.keys(errData).length === 0) {\r\n            const url = \"http://dct-user-auth.herokuapp.com/users/login\"\r\n            axios.post(url, loginData)\r\n                .then((res) => {\r\n                    if (Object.keys(res.data)[0]===\"errors\") {\r\n                        setError({ status: res.data })\r\n                    } else if (Object.keys(res.data)[0]===\"token\") {\r\n                        localStorage.setItem(\"loginToken\", JSON.stringify(res.data))\r\n                        handleLogin()\r\n                        swal(\"success!\", \"You are logged in!\", \"success\")\r\n                        history.push(\"/\")\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    swal(err.message)\r\n                })\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"login\">\r\n            <Nav />\r\n            <div className=\"loginform\">\r\n                {\r\n                    error.status && <span>{error.status.errors}</span>\r\n                }\r\n                <h3>Login to your account!</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={loginData.email} onChange={handleChange} placeholder=\"email\" name=\"email\" /><br />\r\n                     {\r\n                        error.email && <div><span>{error.email}</span><br /></div>\r\n                    }\r\n                    <input type=\"password\" value={loginData.password} onChange={handleChange} placeholder=\"Password\" name=\"password\" /><br />\r\n                     {\r\n                        error.password && <div><span>{error.password}</span><br /></div>\r\n                    }\r\n                    <input type=\"submit\" value=\"Login\" />\r\n                    <input type=\"button\" value=\"cancel\" onClick={handleRemove}/>\r\n                </form>\r\n                <p>Don't have Account ? <Link to='/register'>Register here</Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Login","D:\\code\\userauthentication\\userauthentication\\src\\components\\Nav.js",[],"D:\\code\\userauthentication\\userauthentication\\src\\components\\Home.js",["48"],"D:\\code\\userauthentication\\userauthentication\\src\\components\\Account.js",["49"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Nav from './Nav'\r\nimport '../style/account.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport swal from 'sweetalert'\r\n\r\nconst Account = (props) => {\r\n    const {isLoggedIn,handleLogout,handleLogin } = props\r\n    const [userData, setUserData] = useState({})\r\n    const history = useHistory()\r\n    \r\n    useEffect(() => {\r\n        const tokenValue = JSON.parse(localStorage.getItem(\"loginToken\"))\r\n        if (tokenValue) {\r\n            const url = \"http://dct-user-auth.herokuapp.com/users/account\"\r\n        axios.get(url, { headers: { 'x-auth': tokenValue.token } })\r\n            .then((res) => {\r\n                setUserData(res.data)\r\n                handleLogin()\r\n            })\r\n            .catch((err) => {\r\n                history.push(\"/login\")\r\n                swal(\"you need to login first\")\r\n            })\r\n        } else {\r\n            history.push(\"/login\")\r\n            swal(\"you need to login first\")\r\n        }\r\n        \r\n    }, [])\r\n    \r\n    return (\r\n        <div>\r\n            <Nav isLoggedIn={isLoggedIn} handleLogout={handleLogout} />\r\n            <div className=\"showUser\">\r\n                <h4>{userData.username}</h4>\r\n                <h4>{userData.email}</h4>\r\n                <h4>{userData.createdAt}</h4>\r\n                <h4>{userData._id}</h4>\r\n            </div>\r\n        </div>\r\n     )\r\n}\r\nexport default Account",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":24,"nodeType":"56","messageId":"57","endLine":1,"endColumn":33},{"ruleId":"58","severity":1,"message":"59","line":18,"column":9,"nodeType":"60","endLine":18,"endColumn":11,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":68,"column":42,"nodeType":"64","messageId":"65","endLine":68,"endColumn":43,"suggestions":"66"},{"ruleId":"62","severity":1,"message":"63","line":68,"column":67,"nodeType":"64","messageId":"65","endLine":68,"endColumn":68,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"63","line":68,"column":76,"nodeType":"64","messageId":"65","endLine":68,"endColumn":77,"suggestions":"68"},{"ruleId":"62","severity":1,"message":"63","line":68,"column":80,"nodeType":"64","messageId":"65","endLine":68,"endColumn":81,"suggestions":"69"},{"ruleId":"54","severity":1,"message":"70","line":71,"column":11,"nodeType":"56","messageId":"57","endLine":71,"endColumn":22},{"ruleId":"58","severity":1,"message":"59","line":18,"column":9,"nodeType":"60","endLine":18,"endColumn":11,"suggestions":"71"},{"ruleId":"58","severity":1,"message":"72","line":16,"column":7,"nodeType":"60","endLine":16,"endColumn":9,"suggestions":"73"},{"ruleId":"58","severity":1,"message":"74","line":31,"column":8,"nodeType":"60","endLine":31,"endColumn":10,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleLogout'. Either include it or remove the dependency array.","ArrayExpression",["78"],"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["79","80"],["81","82"],["83","84"],["85","86"],"'handleError' is assigned a value but never used.",["87"],"React Hook useEffect has a missing dependency: 'handleLogin'. Either include it or remove the dependency array.",["88"],"React Hook useEffect has missing dependencies: 'handleLogin' and 'history'. Either include them or remove the dependency array.",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"messageId":"92","fix":"93","desc":"94"},{"messageId":"95","fix":"96","desc":"97"},{"messageId":"92","fix":"98","desc":"94"},{"messageId":"95","fix":"99","desc":"97"},{"messageId":"92","fix":"100","desc":"94"},{"messageId":"95","fix":"101","desc":"97"},{"messageId":"92","fix":"102","desc":"94"},{"messageId":"95","fix":"103","desc":"97"},{"desc":"90","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [handleLogout]",{"range":"109","text":"110"},"removeEscape",{"range":"111","text":"112"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"113","text":"114"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"115","text":"112"},{"range":"116","text":"114"},{"range":"117","text":"112"},{"range":"118","text":"114"},{"range":"119","text":"112"},{"range":"120","text":"114"},{"range":"121","text":"110"},"Update the dependencies array to be: [handleLogin]",{"range":"122","text":"123"},"Update the dependencies array to be: [handleLogin, history]",{"range":"124","text":"125"},[605,607],"[handleLogout]",[2509,2510],"",[2509,2509],"\\",[2534,2535],[2534,2534],[2543,2544],[2543,2543],[2547,2548],[2547,2547],[581,583],[392,394],"[handleLogin]",[1042,1044],"[handleLogin, history]"]